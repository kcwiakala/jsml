
const Perceptron = require('../lib/perceptron');

let p = new Perceptron(2);
let L = [ 
  { x: [ 1.3918159586, 2.3137462987 ], y: 0 },
  { x: [ 2.7553492977, 3.8358933062 ], y: 0 },
  { x: [ 1.3068825052, 1.562141254 ], y: 0 },
  { x: [ 2.8944226465, 2.5841533943 ], y: 0 },
  { x: [ 3.7024428812, 2.7501198675 ], y: 0 },
  { x: [ 3.5026863304, 4.1441852379 ], y: 0 },
  { x: [ 1.2875267989, 1.6449839313 ], y: 0 },
  { x: [ 1.5512224368, 3.479681808 ], y: 0 },
  { x: [ 2.4134867529, 4.2236237896 ], y: 0 },
  { x: [ 3.6559341255, 1.9783436371 ], y: 0 },
  { x: [ 6.9659900849, 5.3009901301 ], y: 1 },
  { x: [ 9.0119210614, 7.702946096 ], y: 1 },
  { x: [ 5.950966712, 7.2311001543 ], y: 1 },
  { x: [ 5.979236673, 7.7339372771 ], y: 1 },
  { x: [ 5.955605886, 6.8574976596 ], y: 1 },
  { x: [ 7.8664572356, 6.3242365141 ], y: 1 },
  { x: [ 5.2714950518, 6.744864841 ], y: 1 },
  { x: [ 7.0457948624, 8.2216029477 ], y: 1 },
  { x: [ 8.3580121873, 7.1820232618 ], y: 1 },
  { x: [ 9.6273291291, 7.0579781464 ], y: 1 } 
];

console.log(p);
const delta = 1 / (L.length - 1);

for(let j=0; j< 1000; ++j) {
  for(let i in L) {
    p.learn(L[i]);
  }
  if(p.error(L) < 0.01) {
    console.log('Step ' + j + ': ' +  p.error(L));
    break;
  }
}
console.log(p);
console.log(p.out([10,3]));
console.log(p.out([10,-1]));